version: "3.8"
services:
    server:
        build: ./server/
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.backend.rule=Host(`backend.localhost`)"
            - "traefik.http.routers.backend.entrypoints=web"
            - "traefik.port=8000"
        environment:
            - DATABASE_PASSWORD=1234
            - DATABASE_HOST=db
            - DATABASE_TABLE=babyelefant
            - PYTHONUNBUFFERED=1
        depends_on:
            - "db"
            - "torchserve"
            - "redis"
        devices:
            - "/dev/video0:/dev/video0"
 #       runtime: nvidia
    db:
        image: 'postgres:alpine'
        environment:
            - POSTGRES_USER=babyelefant
            - POSTGRES_PASSWORD=1234
        volumes:
            - ./server/init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - "5432:5432"
    frontend:
        build: './frontend/'
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.frontend.rule=Host(`babyelefant.localhost`)"
            - "traefik.http.routers.frontend.entrypoints=web"
        environment:
            - VUE_APP_API_URL=http://backend.localhost/api
    traefik:
        image: "traefik:v2.5"
        container_name: "traefik"
        command:
          #- "--log.level=DEBUG"
          - "--api.insecure=true"
          - "--providers.docker=true"
          - "--providers.docker.exposedbydefault=false"
          - "--entrypoints.web.address=:80"
        ports:
          - "80:80"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock:ro"
    torchserve:
        build: './torchserve/'
        ports:
            - "8080:8080"
            - "7070:7070"
    redis:
        image: redis
        ports:
            - "6379:6379"
    client:
        build: './imageClient/'
        depends_on:
          - server

